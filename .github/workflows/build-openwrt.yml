name: Build OpenWrt Firmware

on:
  watch:
    types: [started]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.actor == 'dfh1949'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y build-essential ccache ecj fastjar file g++ gawk gettext git java-propose-classpath libncurses5-dev libncursesw5-dev libssl-dev python3 python3-distutils python3-setuptools python3-dev rsync subversion swig time unzip wget xsltproc zlib1g-dev $(curl -fsSL https://tinyurl.com/openwrt-depends)

    - name: Cache feeds and ccache
      uses: actions/cache@v4
      with:
        path: |
          openwrt/dl/
          ~/.ccache/
        key: ${{ runner.os }}-openwrt-feeds-${{ hashFiles('openwrt/feeds.conf.default') }}
        restore-keys: |
          ${{ runner.os }}-openwrt-feeds-

    - name: Clone OpenWrt source
      run: |
        git clone --depth=1 -b openwrt-23.05 https://git.openwrt.org/openwrt/openwrt.git
        cd openwrt

    - name: Update and install feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Apply custom diffconfig
      run: |
        cd openwrt
        # 生成默认配置，确保基于目标设备
        make defconfig
        # 应用 diffconfig（包选择等）
        if [ -f ../diffconfig ]; then
          cat ../diffconfig >> .config
          make defconfig  # 再次展开，确保依赖完整
        fi

    - name: Apply custom kernel config
      run: |
        cd openwrt
        # 替换为你的 target，如 ath79/generic
        if [ -f ../.kernel_config ]; then
          cp ../.kernel_config target/linux/ath79/config-default
        fi
        # 验证 kernel config 是否应用（非交互式）
        if [ -f target/linux/ath79/config-default ]; then
          echo "Kernel config applied:"
          head -n 10 target/linux/ath79/config-default
        fi

    - name: Apply custom network config
      run: |
        cd openwrt
        # 复制自定义 files 目录（包含网络配置）
        if [ -d ../files ]; then
          cp -r ../files .
        fi
        # 验证 network config 是否应用
        if [ -f files/etc/config/network ]; then
          echo "Network config applied:"
          cat files/etc/config/network
        fi

    - name: Download and prepare
      run: |
        cd openwrt
        make download prepare -j$(nproc) V=s

    - name: Compile firmware
      run: |
        cd openwrt
        make -j$(nproc) V=s

    - name: Upload firmware artifacts
      uses: actions/upload-artifact@v4
      with:
        name: openwrt-firmware
        path: openwrt/bin/targets/*/*.bin
        retention-days: 30
